//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class MyLib_CGPlayerCmdWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(MyLib.CGPlayerCmd), typeof(Google.ProtocolBuffers.GeneratedMessageLite<MyLib.CGPlayerCmd,MyLib.CGPlayerCmd.Builder>));
		L.RegFunction("WriteTo", WriteTo);
		L.RegFunction("GetHashCode", GetHashCode);
		L.RegFunction("Equals", Equals);
		L.RegFunction("PrintTo", PrintTo);
		L.RegFunction("ParseFrom", ParseFrom);
		L.RegFunction("ParseDelimitedFrom", ParseDelimitedFrom);
		L.RegFunction("CreateBuilder", CreateBuilder);
		L.RegFunction("ToBuilder", ToBuilder);
		L.RegFunction("CreateBuilderForType", CreateBuilderForType);
		L.RegFunction("New", _CreateMyLib_CGPlayerCmd);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegConstant("CmdFieldNumber", 1);
		L.RegConstant("AvatarInfoFieldNumber", 2);
		L.RegConstant("DamageInfoFieldNumber", 3);
		L.RegConstant("SkillActionFieldNumber", 4);
		L.RegConstant("BuffInfoFieldNumber", 5);
		L.RegConstant("EntityInfoFieldNumber", 6);
		L.RegConstant("PickActionFieldNumber", 7);
		L.RegConstant("LeftTimeFieldNumber", 8);
		L.RegConstant("RoomInfoFieldNumber", 9);
		L.RegConstant("AccountFieldNumber", 10);
		L.RegConstant("NicknameFieldNumber", 11);
		L.RegConstant("DeviceInfoFieldNumber", 12);
		L.RegConstant("FrameIdFieldNumber", 13);
		L.RegVar("DefaultInstance", get_DefaultInstance, null);
		L.RegVar("DefaultInstanceForType", get_DefaultInstanceForType, null);
		L.RegVar("HasCmd", get_HasCmd, null);
		L.RegVar("Cmd", get_Cmd, set_Cmd);
		L.RegVar("HasAvatarInfo", get_HasAvatarInfo, null);
		L.RegVar("AvatarInfo", get_AvatarInfo, set_AvatarInfo);
		L.RegVar("HasDamageInfo", get_HasDamageInfo, null);
		L.RegVar("DamageInfo", get_DamageInfo, set_DamageInfo);
		L.RegVar("HasSkillAction", get_HasSkillAction, null);
		L.RegVar("SkillAction", get_SkillAction, set_SkillAction);
		L.RegVar("HasBuffInfo", get_HasBuffInfo, null);
		L.RegVar("BuffInfo", get_BuffInfo, set_BuffInfo);
		L.RegVar("HasEntityInfo", get_HasEntityInfo, null);
		L.RegVar("EntityInfo", get_EntityInfo, set_EntityInfo);
		L.RegVar("HasPickAction", get_HasPickAction, null);
		L.RegVar("PickAction", get_PickAction, set_PickAction);
		L.RegVar("HasLeftTime", get_HasLeftTime, null);
		L.RegVar("LeftTime", get_LeftTime, set_LeftTime);
		L.RegVar("HasRoomInfo", get_HasRoomInfo, null);
		L.RegVar("RoomInfo", get_RoomInfo, set_RoomInfo);
		L.RegVar("HasAccount", get_HasAccount, null);
		L.RegVar("Account", get_Account, set_Account);
		L.RegVar("HasNickname", get_HasNickname, null);
		L.RegVar("Nickname", get_Nickname, set_Nickname);
		L.RegVar("HasDeviceInfo", get_HasDeviceInfo, null);
		L.RegVar("DeviceInfo", get_DeviceInfo, set_DeviceInfo);
		L.RegVar("HasFrameId", get_HasFrameId, null);
		L.RegVar("FrameId", get_FrameId, set_FrameId);
		L.RegVar("IsInitialized", get_IsInitialized, null);
		L.RegVar("SerializedSize", get_SerializedSize, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateMyLib_CGPlayerCmd(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				MyLib.CGPlayerCmd obj = new MyLib.CGPlayerCmd();
				ToLua.PushSealed(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: MyLib.CGPlayerCmd.New");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int WriteTo(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes<Google.ProtocolBuffers.CodedOutputStream>(L, 2))
			{
				MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)ToLua.CheckObject(L, 1, typeof(MyLib.CGPlayerCmd));
				Google.ProtocolBuffers.CodedOutputStream arg0 = (Google.ProtocolBuffers.CodedOutputStream)ToLua.ToObject(L, 2);
				obj.WriteTo(arg0);
				return 0;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.IO.Stream>(L, 2))
			{
				MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)ToLua.CheckObject(L, 1, typeof(MyLib.CGPlayerCmd));
				System.IO.Stream arg0 = (System.IO.Stream)ToLua.ToObject(L, 2);
				obj.WriteTo(arg0);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: MyLib.CGPlayerCmd.WriteTo");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetHashCode(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)ToLua.CheckObject(L, 1, typeof(MyLib.CGPlayerCmd));
			int o = obj.GetHashCode();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Equals(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)ToLua.CheckObject(L, 1, typeof(MyLib.CGPlayerCmd));
			object arg0 = ToLua.ToVarObject(L, 2);
			bool o = obj != null ? obj.Equals(arg0) : arg0 == null;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PrintTo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)ToLua.CheckObject(L, 1, typeof(MyLib.CGPlayerCmd));
			System.IO.TextWriter arg0 = (System.IO.TextWriter)ToLua.CheckObject<System.IO.TextWriter>(L, 2);
			obj.PrintTo(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ParseFrom(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1 && TypeChecker.CheckTypes<Google.ProtocolBuffers.ByteString>(L, 1))
			{
				Google.ProtocolBuffers.ByteString arg0 = (Google.ProtocolBuffers.ByteString)ToLua.ToObject(L, 1);
				MyLib.CGPlayerCmd o = MyLib.CGPlayerCmd.ParseFrom(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<byte[]>(L, 1))
			{
				byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
				MyLib.CGPlayerCmd o = MyLib.CGPlayerCmd.ParseFrom(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<System.IO.Stream>(L, 1))
			{
				System.IO.Stream arg0 = (System.IO.Stream)ToLua.ToObject(L, 1);
				MyLib.CGPlayerCmd o = MyLib.CGPlayerCmd.ParseFrom(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 1 && TypeChecker.CheckTypes<Google.ProtocolBuffers.CodedInputStream>(L, 1))
			{
				Google.ProtocolBuffers.CodedInputStream arg0 = (Google.ProtocolBuffers.CodedInputStream)ToLua.ToObject(L, 1);
				MyLib.CGPlayerCmd o = MyLib.CGPlayerCmd.ParseFrom(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Google.ProtocolBuffers.ByteString, Google.ProtocolBuffers.ExtensionRegistry>(L, 1))
			{
				Google.ProtocolBuffers.ByteString arg0 = (Google.ProtocolBuffers.ByteString)ToLua.ToObject(L, 1);
				Google.ProtocolBuffers.ExtensionRegistry arg1 = (Google.ProtocolBuffers.ExtensionRegistry)ToLua.ToObject(L, 2);
				MyLib.CGPlayerCmd o = MyLib.CGPlayerCmd.ParseFrom(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<byte[], Google.ProtocolBuffers.ExtensionRegistry>(L, 1))
			{
				byte[] arg0 = ToLua.CheckByteBuffer(L, 1);
				Google.ProtocolBuffers.ExtensionRegistry arg1 = (Google.ProtocolBuffers.ExtensionRegistry)ToLua.ToObject(L, 2);
				MyLib.CGPlayerCmd o = MyLib.CGPlayerCmd.ParseFrom(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<System.IO.Stream, Google.ProtocolBuffers.ExtensionRegistry>(L, 1))
			{
				System.IO.Stream arg0 = (System.IO.Stream)ToLua.ToObject(L, 1);
				Google.ProtocolBuffers.ExtensionRegistry arg1 = (Google.ProtocolBuffers.ExtensionRegistry)ToLua.ToObject(L, 2);
				MyLib.CGPlayerCmd o = MyLib.CGPlayerCmd.ParseFrom(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2 && TypeChecker.CheckTypes<Google.ProtocolBuffers.CodedInputStream, Google.ProtocolBuffers.ExtensionRegistry>(L, 1))
			{
				Google.ProtocolBuffers.CodedInputStream arg0 = (Google.ProtocolBuffers.CodedInputStream)ToLua.ToObject(L, 1);
				Google.ProtocolBuffers.ExtensionRegistry arg1 = (Google.ProtocolBuffers.ExtensionRegistry)ToLua.ToObject(L, 2);
				MyLib.CGPlayerCmd o = MyLib.CGPlayerCmd.ParseFrom(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: MyLib.CGPlayerCmd.ParseFrom");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ParseDelimitedFrom(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				System.IO.Stream arg0 = (System.IO.Stream)ToLua.CheckObject<System.IO.Stream>(L, 1);
				MyLib.CGPlayerCmd o = MyLib.CGPlayerCmd.ParseDelimitedFrom(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 2)
			{
				System.IO.Stream arg0 = (System.IO.Stream)ToLua.CheckObject<System.IO.Stream>(L, 1);
				Google.ProtocolBuffers.ExtensionRegistry arg1 = (Google.ProtocolBuffers.ExtensionRegistry)ToLua.CheckObject(L, 2, typeof(Google.ProtocolBuffers.ExtensionRegistry));
				MyLib.CGPlayerCmd o = MyLib.CGPlayerCmd.ParseDelimitedFrom(arg0, arg1);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: MyLib.CGPlayerCmd.ParseDelimitedFrom");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateBuilder(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				MyLib.CGPlayerCmd.Builder o = MyLib.CGPlayerCmd.CreateBuilder();
				ToLua.PushSealed(L, o);
				return 1;
			}
			else if (count == 1)
			{
				MyLib.CGPlayerCmd arg0 = (MyLib.CGPlayerCmd)ToLua.CheckObject(L, 1, typeof(MyLib.CGPlayerCmd));
				MyLib.CGPlayerCmd.Builder o = MyLib.CGPlayerCmd.CreateBuilder(arg0);
				ToLua.PushSealed(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: MyLib.CGPlayerCmd.CreateBuilder");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ToBuilder(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)ToLua.CheckObject(L, 1, typeof(MyLib.CGPlayerCmd));
			MyLib.CGPlayerCmd.Builder o = obj.ToBuilder();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CreateBuilderForType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)ToLua.CheckObject(L, 1, typeof(MyLib.CGPlayerCmd));
			MyLib.CGPlayerCmd.Builder o = obj.CreateBuilderForType();
			ToLua.PushSealed(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DefaultInstance(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, MyLib.CGPlayerCmd.DefaultInstance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DefaultInstanceForType(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.CGPlayerCmd ret = obj.DefaultInstanceForType;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DefaultInstanceForType on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasCmd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasCmd;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasCmd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Cmd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			string ret = obj.Cmd;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Cmd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasAvatarInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasAvatarInfo;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasAvatarInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AvatarInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.AvatarInfo ret = obj.AvatarInfo;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AvatarInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasDamageInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasDamageInfo;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasDamageInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DamageInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.DamageInfo ret = obj.DamageInfo;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DamageInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasSkillAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasSkillAction;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasSkillAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SkillAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.SkillAction ret = obj.SkillAction;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SkillAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasBuffInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasBuffInfo;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasBuffInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BuffInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.BuffInfo ret = obj.BuffInfo;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BuffInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasEntityInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasEntityInfo;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasEntityInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EntityInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.EntityInfo ret = obj.EntityInfo;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EntityInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasPickAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasPickAction;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasPickAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PickAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.PickItemAction ret = obj.PickAction;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PickAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasLeftTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasLeftTime;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasLeftTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_LeftTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			int ret = obj.LeftTime;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LeftTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasRoomInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasRoomInfo;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasRoomInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RoomInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.RoomInfo ret = obj.RoomInfo;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RoomInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasAccount(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasAccount;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasAccount on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Account(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			string ret = obj.Account;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Account on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasNickname(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasNickname;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasNickname on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Nickname(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			string ret = obj.Nickname;
			LuaDLL.lua_pushstring(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Nickname on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasDeviceInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasDeviceInfo;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasDeviceInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_DeviceInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.DeviceInfo ret = obj.DeviceInfo;
			ToLua.PushSealed(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DeviceInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_HasFrameId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.HasFrameId;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index HasFrameId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FrameId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			ulong ret = obj.FrameId;
			LuaDLL.tolua_pushuint64(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FrameId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsInitialized(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			bool ret = obj.IsInitialized;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index IsInitialized on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SerializedSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			int ret = obj.SerializedSize;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SerializedSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Cmd(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Cmd = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Cmd on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AvatarInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.AvatarInfo arg0 = (MyLib.AvatarInfo)ToLua.CheckObject(L, 2, typeof(MyLib.AvatarInfo));
			obj.AvatarInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AvatarInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DamageInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.DamageInfo arg0 = (MyLib.DamageInfo)ToLua.CheckObject(L, 2, typeof(MyLib.DamageInfo));
			obj.DamageInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DamageInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SkillAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.SkillAction arg0 = (MyLib.SkillAction)ToLua.CheckObject(L, 2, typeof(MyLib.SkillAction));
			obj.SkillAction = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SkillAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BuffInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.BuffInfo arg0 = (MyLib.BuffInfo)ToLua.CheckObject(L, 2, typeof(MyLib.BuffInfo));
			obj.BuffInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BuffInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EntityInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.EntityInfo arg0 = (MyLib.EntityInfo)ToLua.CheckObject(L, 2, typeof(MyLib.EntityInfo));
			obj.EntityInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EntityInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PickAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.PickItemAction arg0 = (MyLib.PickItemAction)ToLua.CheckObject(L, 2, typeof(MyLib.PickItemAction));
			obj.PickAction = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index PickAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_LeftTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LeftTime = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index LeftTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RoomInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.RoomInfo arg0 = (MyLib.RoomInfo)ToLua.CheckObject(L, 2, typeof(MyLib.RoomInfo));
			obj.RoomInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RoomInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Account(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Account = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Account on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Nickname(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			string arg0 = ToLua.CheckString(L, 2);
			obj.Nickname = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Nickname on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_DeviceInfo(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			MyLib.DeviceInfo arg0 = (MyLib.DeviceInfo)ToLua.CheckObject(L, 2, typeof(MyLib.DeviceInfo));
			obj.DeviceInfo = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index DeviceInfo on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FrameId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			MyLib.CGPlayerCmd obj = (MyLib.CGPlayerCmd)o;
			ulong arg0 = LuaDLL.tolua_checkuint64(L, 2);
			obj.FrameId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FrameId on a nil value");
		}
	}
}

