//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NetworkSceneWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(NetworkScene), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("StartConnect", StartConnect);
		L.RegFunction("MsgHandler", MsgHandler);
		L.RegFunction("SendPacket", SendPacket);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Instance", get_Instance, set_Instance);
		L.RegVar("Logic", get_Logic, set_Logic);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StartConnect(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			NetworkScene obj = (NetworkScene)ToLua.CheckObject<NetworkScene>(L, 1);
			obj.StartConnect();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MsgHandler(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			NetworkScene obj = (NetworkScene)ToLua.CheckObject<NetworkScene>(L, 1);
			Packet arg0 = (Packet)ToLua.CheckObject<Packet>(L, 2);
			obj.MsgHandler(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendPacket(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			NetworkScene obj = (NetworkScene)ToLua.CheckObject<NetworkScene>(L, 1);
			MyLib.CGPlayerCmd.Builder arg0 = (MyLib.CGPlayerCmd.Builder)ToLua.CheckObject(L, 2, typeof(MyLib.CGPlayerCmd.Builder));
			obj.SendPacket(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, NetworkScene.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Logic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NetworkScene obj = (NetworkScene)o;
			ILogic ret = obj.Logic;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Logic on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Instance(IntPtr L)
	{
		try
		{
			NetworkScene arg0 = (NetworkScene)ToLua.CheckObject<NetworkScene>(L, 2);
			NetworkScene.Instance = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_Logic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			NetworkScene obj = (NetworkScene)o;
			ILogic arg0 = (ILogic)ToLua.CheckObject<ILogic>(L, 2);
			obj.Logic = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Logic on a nil value");
		}
	}
}

